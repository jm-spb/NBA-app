import { IStatsSeasonTypes, ITableColumns } from '../types/contentTypes';

export const seasonTypes: IStatsSeasonTypes[] = [
  {
    type: 'Regular Season',
    query: 'season_totals_regular_season',
  },
  {
    type: 'Playoffs',
    query: 'season_totals_post_season',
  },
];

export const statsTableColumns: ITableColumns[] = [
  {
    title: 'PLAYER',
    dataIndex: 'full_name',
    key: 'full_name',
    width: 200,
    fixed: 'left',
  },
  {
    title: 'AGE',
    dataIndex: 'player_age',
    key: 'player_age',
    align: 'center' as const,
    sorter: (a, b) => a.player_age - b.player_age,
  },
  {
    title: 'GP',
    dataIndex: 'gp',
    key: 'gp',
    align: 'center' as const,
    sorter: (a, b) => a.gp - b.gp,
  },
  {
    title: 'GS',
    dataIndex: 'gs',
    key: 'gs',
    align: 'center' as const,
    sorter: (a, b) => a.gs - b.gs,
  },
  {
    title: 'MIN',
    dataIndex: 'min',
    key: 'min',
    align: 'center' as const,
    sorter: (a, b) => a.min - b.min,
  },
  {
    title: 'PTS',
    dataIndex: 'pts',
    key: 'pts',
    align: 'center' as const,
    sorter: (a, b) => a.pts - b.pts,
  },
  {
    title: 'FGM',
    dataIndex: 'fgm',
    key: 'fgm',
    align: 'center' as const,
    sorter: (a, b) => a.fgm - b.fgm,
  },
  {
    title: 'FGA',
    dataIndex: 'fga',
    key: 'fga',
    align: 'center' as const,
    sorter: (a, b) => a.fga - b.fga,
  },
  {
    title: 'FG%',
    dataIndex: 'fg_pct',
    key: 'fg_pct',
    align: 'center' as const,
    sorter: (a, b) => a.fg_pct - b.fg_pct,
  },
  {
    title: '3PM',
    dataIndex: 'fg3m',
    key: 'fg3m',
    align: 'center' as const,
    sorter: (a, b) => a.fg3m - b.fg3m,
  },
  {
    title: '3PA',
    dataIndex: 'fg3a',
    key: 'fg3a',
    align: 'center' as const,
    sorter: (a, b) => a.fg3a - b.fg3a,
  },
  {
    title: '3P%',
    dataIndex: 'fg3_pct',
    key: 'fg3_pct',
    align: 'center' as const,
    sorter: (a, b) => a.fg3_pct - b.fg3_pct,
  },
  {
    title: 'FTM',
    dataIndex: 'ftm',
    key: 'ftm',
    align: 'center' as const,
    sorter: (a, b) => a.ftm - b.ftm,
  },
  {
    title: 'FTA',
    dataIndex: 'fta',
    key: 'fta',
    align: 'center' as const,
    sorter: (a, b) => a.fta - b.fta,
  },
  {
    title: 'FT%',
    dataIndex: 'ft_pct',
    key: 'ft_pct',
    align: 'center' as const,
    sorter: (a, b) => a.ft_pct - b.ft_pct,
  },
  {
    title: 'OREB',
    dataIndex: 'oreb',
    key: 'oreb',
    align: 'center' as const,
    sorter: (a, b) => a.oreb - b.oreb,
  },
  {
    title: 'DREB',
    dataIndex: 'dreb',
    key: 'dreb',
    align: 'center' as const,
    sorter: (a, b) => a.dreb - b.dreb,
  },
  {
    title: 'REB',
    dataIndex: 'reb',
    key: 'reb',
    align: 'center' as const,
    sorter: (a, b) => a.reb - b.reb,
  },
  {
    title: 'AST',
    dataIndex: 'ast',
    key: 'ast',
    align: 'center' as const,
    sorter: (a, b) => a.ast - b.ast,
  },
  {
    title: 'TOV',
    dataIndex: 'tov',
    key: 'tov',
    align: 'center' as const,
    sorter: (a, b) => a.tov - b.tov,
  },
  {
    title: 'STL',
    dataIndex: 'stl',
    key: 'stl',
    align: 'center' as const,
    sorter: (a, b) => a.stl - b.stl,
  },
  {
    title: 'BLK',
    dataIndex: 'blk',
    key: 'blk',
    align: 'center' as const,
    sorter: (a, b) => a.blk - b.blk,
  },
  {
    title: 'PF',
    dataIndex: 'pf',
    key: 'pf',
    align: 'center' as const,
    sorter: (a, b) => a.pf - b.pf,
  },
];
